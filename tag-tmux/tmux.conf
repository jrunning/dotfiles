# Most of this is from: https://github.com/skwp/dotfiles/blob/master/tmux/tmux.conf

# Ring the bell if any background window rang a bell
set -g bell-action any

# Default termtype. If the rcfile set $TERM, that overrides this value.
set -ga terminal-overrides ',*:Tc'
set -g default-terminal "tmux-256color"

# Keep your finger on ctrl, or don't
bind-key ^D detach-client

# Create splits and vertical splits
bind-key v split-window -h -c "#{pane_current_path}"
bind-key ^V split-window -h -c "#{pane_current_path}"
bind-key s split-window -c "#{pane_current_path}"
bind-key ^S split-window -c "#{pane_current_path}"

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Use vi keybindings for tmux commandline input
# Note that to get command mode you need to hit ESC twice...
set -g status-keys vi

# Use vi keybindings in copy and choice modes
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
# Use copy-pipe for OS X clipboard support: http://robots.thoughtbot.com/tmux-copy-paste-on-os-x-a-better-future
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Set first window to index 1 (not 0) to match keyboard layout
set-option -g base-index 1
set-window-option -g pane-base-index 1

# color scheme (styled as vim-powerline)
rt_arrow_blk=''
rt_arrow=''
lt_arrow_blk=''
lt_arrow=''
blue='colour39'
grey1='colour252'
grey2='colour245'
grey3='colour238'
grey4='colour235'
grey5='colour234'
orange='colour166'

set -g status-left-length 52
set -g status-right-length 451
set -g status-fg white
set -g status-bg $grey5
set -g pane-border-fg $grey2
set -g pane-active-border-fg $blue
set -g message-fg $grey5
set -g message-bg $blue
set -g message-attr bold
set -g status-left "#[fg=$grey4,bg=$grey1,bold]#{?client_prefix, #[fg=$orange]^a#[fg=$grey4],} ❐ #S #[fg=$grey1,bg=$grey3,nobold]$rt_arrow_blk#[fg=$grey2,bg=$grey3,bold] #(whoami) #[fg=$grey3,bg=$blue,nobold]$rt_arrow_blk"
set -g window-status-format "#[fg=$grey4,bg=$grey1,bold] #I: #W "
set -g window-status-current-format "#[fg=$grey5,bg=$blue]⮀#[fg=black,bg=$lue,noreverse,bold] #I: #W #[fg=$blue,bg=$grey5,nobold]$rt_arrow_blk"

# Patch for OS X pbpaste and pbcopy under tmux.
set-option -g default-command "which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL"

# Screen like binding
unbind C-b
set -g prefix C-a
bind a send-prefix

# No escape time for vi mode
set -sg escape-time 0

# Screen like binding for last window (Ctrl-a-a)
unbind l
bind C-a last-window

# Bigger history
set -g history-limit 10000

# New windows/pane in $PWD
bind c new-window -c "#{pane_current_path}"

# Enable mouse
set -g mouse on

set -g aggressive-resize on

# Load plugins
if-shell "[-f ~/.tmux.plugins.conf ]" 'source ~/.tmux.plugins.conf'

# Local config
if-shell "[-f ~/.tmux.conf.local ]" 'source ~/.tmux.conf.user'
